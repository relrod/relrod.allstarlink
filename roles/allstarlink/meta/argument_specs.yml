argument_specs:
  main:
    short_description: Set up an AllStarLink node
    author:
      - Rick Elrod
    options:
      install_method:
        type: str
        required: false
        default: ai5a-deb
        choices:
          - ai5a-deb
          - upstream-deb
          - config-only
        description: |
          How should ASL be installed?
          ai5a-deb: Uses the AI5A fork of AllStarLink
          upstream-deb: Uses the upstream AllStarLink (often does not support
                        newer Debian)
          config-only: Writes out templated config files but does not install
                       packages (useful for Docker installations to mount, etc.)

      config_directory:
        type: str
        required: false
        default: /etc/asterisk
        description: |
          Where should we write out the config files to?
          This directory will be *deleted* on initial install (unless
          install_method is config-only). Generally you should not change this
          unless you are using install_method: config-only and want to mount
          this directory from elsewhere.

      node_number:
        type: int
        required: true
        description: The node number we're configuring.

      carrierfrom:
        type: str
        required: false
        default: usb
        description: "https://wiki.allstarlink.org/wiki/SimpleUSB_Channel_Driver"

      duplex:
        type: int
        required: false
        default: 1
        description: "https://wiki.allstarlink.org/wiki/Rpt.conf#duplex.3D"

      idrecording:
        type: str
        required: true
        description: "https://wiki.allstarlink.org/wiki/Rpt.conf#idrecording.3D"

      idtalkover:
        type: str
        required: true
        description: "https://wiki.allstarlink.org/wiki/Rpt.conf#idtalkover.3D"

      bind:
        type: str
        required: false
        default: 0.0.0.0
        description: IP address/interface to bind to.

      port:
        type: int
        required: false
        default: 4569
        description: Port number to bind to.

      reg_password:
        type: str
        required: true
        description: Password to register with the AllStarLink server.

      reg_server:
        type: str
        required: false
        default: register.allstarlink.org
        description: AllStarLink registration server hostname.

      tailmessagelist:
        type: list
        elements: str
        required: false
        description: >-
          List of messages to include in the tail of a transmission every once
          in a while.

      tailmessagetime:
        type: int
        required: false
        default: 3600000
        description: How often tail messages should play, if enabled.

      delinked_courtesy_tone:
        type: str
        required: false
        default: "|t(750,0,125,2048)(1000,0,80,2048)"
        description: Courtesy tone when node is not linked to anything.

      link_rx_courtesy_tone:
        type: str
        required: false
        default: "|t(800,0,40,1500)(0,0,30,0)(800,0,40,1500)"
        description: Courtesy tone when node a linked remote unkeys.

      linked_courtesy_tone:
        type: str
        required: false
        default: "|t(660,0,50,2048)"
        description: Courtesy tone when someone on RF unkeys but we are linked.

      unkeywait:
        type: int
        required: false
        default: 800
        description: How long to wait before sending courtesy tones, etc.

      totime:
        type: int
        required: false
        default: 600000
        description: How long until we time out? Defaults to 10 minutes.

      outstreamcmd:
        type: str
        required: false
        default: null
        description: A command to call for streaming audio from the node.

      macros:
        type: list
        elements: dict
        required: false
        default: []
        description: >-
          A list of dictionaries with keys:
          - comment (optional, string),
          - macro (int),
          - command (string)

      scheduler:
        type: list
        elements: dict
        required: false
        default: []
        description: >-
          A list of dictionaries with keys:
          - comment (optional, string),
          - macro (int),
          - when (cron style time format)
          - finish (optional, cron style time format)
          - finish_macro (optional, int)

      rxchannel:
        type: str
        required: false
        default: SimpleUSB/usb_{{ node_number }}
        description: The radio interface to use.

      echolink:
        type: bool
        required: false
        default: false
        description: Should echolink be enabled and loaded?

      echolink_config:
        type: dict
        required: false
        default: {}
        description: >-
          Required when 'echolink' is true.
          A dictionary of echolink configuration options. See
          https://wiki.allstarlink.org/wiki/Echolink.conf_-_Echolink_Channel_Driver
          for more information. We directly translate the keys in this dictionary
          to the echolink.conf file. The following keys are hardcoded:
          astnode, context, server1, server2, server3, rtcptimeout, recfile

      acl_context:
        type: str
        required: false
        default: whitelist
        choices:
          - whitelist
          - blacklist
        description: Whether the node should whitelist, or blacklist, incoming connections.

      ami:
        type: bool
        required: false
        default: false
        description: Should the Asterisk Manager Interface be enabled?

      ami_port:
        type: int
        required: false
        default: 5038
        description: Port to bind the AMI to.

      ami_bindaddr:
        type: str
        required: false
        default: 127.0.0.1
        description: IP address to bind the AMI to.

      ami_users:
        type: dict
        required: false
        default: {}
        description: >-
          A dictionary of AMI users to create. The keys are the usernames, and
          the values are dictionaries that get translated directly to the
          configuration file.
